-- #Steps to create the database

DROP DATABASE if exists ;
DROP USER if exists piishield;
CREATE USER syzegee  PASSWORD 'syzegee123!@#';

CREATE DATABASE customer_service ENCODING = 'UTF8';

GRANT ALL PRIVILEGES ON DATABASE customer_service TO syzegee;

GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO syzegee;

GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO syzegee;

//KILLING THE PROCCESS WHEN THE PG-ADMINE SERVER IS HANGED

SELECT 
    pg_terminate_backend(pid)
FROM 
    pg_stat_activity 
WHERE 
    -- don't kill my own connection!
    pid <> pg_backend_pid()
    -- don't kill the connections to other databases
    AND datname = 'operational_mart'
    ; 
    -- don't kill my own 
      
// Alter table benefit_subscription alter COLUMN created_date tYPE timestamp 
//ALTER TABLE table_name ADD COLUMN new_column_name data_type;

//alter table users alter column email drop not null;
//Steps to restore the database from dev to stage.
1)take the back of dev db by clicking  backup in tables and stoere in the local location
2)delete the exisiting stage db and restore it by taking the file which is stored in the local location

ALTER TABLE customer_service ADD COLUMN logo varchar;

# Tables for customer journey------------------*

CREATE TABLE ORGANIZATION (
  ORGANIZATION_ID BIGSERIAL NOT NULL,
  ORGANIZATION_NAME VARCHAR(120) NULL,
  ORGANIZATION_DESC VARCHAR(120) NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (ORGANIZATION_ID)
);


CREATE TABLE CUSTOMER (
  CUSTOMER_ID BIGSERIAL NOT NULL,
  ORGANIZATION_ID BIGSERIAL NOT NULL,
  CUSTOMER_CODE VARCHAR(120) NOT NULL,
  TIER_CODE VARCHAR(120) NOT NULL,
  USER_ID VARCHAR(120) NOT NULL,
  STATUS_CODE VARCHAR(120) NOT NULL,
  BUISNESS_NAME VARCHAR(1024) NULL,
  BUISNESS_EMAIL VARCHAR(120) NULL,
  INDUSTRY_TYPE VARCHAR(120) NULL,
  REGION VARCHAR(120) NULL,
  PHONE VARCHAR(120) NULL,
  CURRENCY VARCHAR(120) NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ID),
  CONSTRAINT  mem_org FOREIGN KEY(ORGANIZATION_ID) REFERENCES ORGANIZATION(ORGANIZATION_ID)
   ON DELETE CASCADE
);

CREATE TABLE TIER (
  TIER_ID BIGSERIAL NOT NULL,
  CUSTOMER_ID BIGSERIAL NOT NULL,
  TIER_NAME VARCHAR(120)  NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (TIER_ID),
  CONSTRAINT tier_cust FOREIGN KEY (TIER_ID) REFERENCES TIER(TIER_ID)
  ON DELETE CASCADE;
);

CREATE TABLE PACKAGES (
  PACKAGE_ID BIGSERIAL NOT NULL,
  TIER_ID BIGSERIAL NOT NULL,
  PACKAGE_NAME VARCHAR(120)  NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (PACKAGE_ID),
  CONSTRAINT pack_tier FOREIGN KEY (TIER_ID) REFERENCES TIER(TIER_ID)
  ON DELETE CASCADE;
);
CREATE TABLE CUSTOMER_ADDRESS (
  CUSTOMER_ADDRESS_ID BIGSERIAL NOT NULL,
  CUSTOMER_ID BIGSERIAL NOT NULL,
  ADDRESS_LINE1 VARCHAR(120) NULL,
  ADDRESS_LINE2 VARCHAR(120) NULL,
  ADDRESS_LINE3 VARCHAR(120) NULL,
  CITY VARCHAR(120) NULL,
  SATE VARCHAR(120) NULL,
  ZIP_CODE VARCHAR(120) NULL,
  COUNTRY_CODE VARCHAR(120) NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ADDRESS_ID),
  CONSTRAINT memadd_cust FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
   ON DELETE CASCADE
);

CREATE TABLE CUSTOMER_BENEFIT (
  CUSTOMER_BENEFIT_ID BIGSERIAL NOT NULL,
  CUSTOMER_ID BIGSERIAL NOT NULL,
  VENDOR_ID BIGSERIAL NOT NULL,
  BENEFIT_CODE VARCHAR(120) NOT NULL,
  PRIMARY KEY (CUSTOMER_BENEFIT_ID),
  CONSTRAINT custbenfit_cust FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
   ON DELETE CASCADE;=
);

CREATE TABLE PACKAGES_BENEFIT (
  PACKAGE_BENEFIT_ID BIGSERIAL NOT NULL,
  PACKAGE_ID BIGSERIAL NOT NULL,
  CUSTOMER_BENEFIT_ID BIGSERIAL NOT  NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (PACKAGE_BENEFIT_ID),
  CONSTRAINT pckgbenf_packg FOREIGN KEY (PACKAGE_ID) REFERENCES PACKAGES(PACKAGE_ID),
  CONSTRAINT pckgbenf_custbene FOREIGN KEY (CUSTOMER_BENEFIT_ID) REFERENCES CUSTOMER_BENEFIT(CUSTOMER_BENEFIT_ID)
  ON DELETE CASCADE;
);
CREATE TABLE  LOCATION (
  LOCATION_ID BIGSERIAL NOT NULL,
  ACCOUNT_ID BIGSERIAL NOT NULL,
  CUSTOMER_BENEFIT_ID BIGSERIAL NOT  NULL,
  LOCATION_NAME VARCHAR(120) NULL,
  IS_ACTIVE boolean, 
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (PACKAGE_BENEFIT_ID),
  CONSTRAINT pckgbenf_custbene FOREIGN KEY (CUSTOMER_BENEFIT_ID) REFERENCES CUSTOMER_BENEFIT(CUSTOMER_BENEFIT_ID)
  ON DELETE CASCADE;
);
CREATE TABLE DOMAIN_DETAILS (
  SITE_ID BIGSERIAL NOT NULL,
  CUSTOMER_ID BIGSERIAL NOT NULL,
  SITE_CODE VARCHAR(120) NOT NULL,
  TEMPLATE_CODE VARCHAR(120) NOT NULL,
  SITE_NAME VARCHAR(120) NULL,
  SITE_DESC VARCHAR(120) NULL,
  DOMAIN_NAME VARCHAR(120) NULL,
  LOGO bytea,
  TAGLINE VARCHAR(120) NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (SITE_ID),
  CONSTRAINT site_cust FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
  ON DELETE CASCADE;
);

CREATE TABLE CUSTOMER_ROLE (
  CUSTOMER_ROLE_ID BIGSERIAL NOT NULL,
  CUSTOMER_ID BIGSERIAL NOT NULL,
  CUSTOMER_ROLE_TYPE VARCHAR(120)  NULL,
  IS_ACTIVE boolean,
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_ROLE_ID),
  CONSTRAINT custrole_cust FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
  ON DELETE CASCADE;
);

CREATE TABLE CUSTOMER_USER (
  CUSTOMER_USER_ID BIGSERIAL NOT NULL,
  CUSTOMER_ROLE_ID BIGSERIAL NOT NULL,
  CUSTOMER_ID BIGSERIAL NOT NULL,
  CUSTOMER_ADDRESS_ID BIGSERIAL NOT NULL,
  CUSTOMER_CONTACT_INFO VARCHAR(120)  NULL,
  CUSTOMER_USER_DESC VARCHAR(120) NULL,
  EMAIL VARCHAR(120) NULL,
  FIRST_NAME VARCHAR(120) NULL,
  LAST_NAME VARCHAR(120) NULL,
  IS_ACTIVE boolean, 
  CREATED_BY VARCHAR(120) NULL,
  CREATED_DATE TIMESTAMP DEFAULT NULL,
  UPDATED_BY VARCHAR(120) NULL,
  UPDATED_DATE TIMESTAMP DEFAULT NULL,
  PRIMARY KEY (CUSTOMER_USER_ID),
  CONSTRAINT custusr_role FOREIGN KEY (CUSTOMER_ROLE_ID) REFERENCES CUSTOMER_ROLE(CUSTOMER_ROLE_ID),
  CONSTRAINT custusr_cust FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
  CONSTRAINT custusr_custaddr FOREIGN KEY (CUSTOMER_ADDRESS_ID) REFERENCES CUSTOMER_ADDRESS(CUSTOMER_ADDRESS_ID)
  ON DELETE CASCADE;
);

